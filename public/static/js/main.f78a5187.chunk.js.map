{"version":3,"sources":["services/api.js","components/footer/footers.jsx","components/header/header.jsx","consts.js","store/actions.js","store/api-actions.js","store/cards/cards.js","store/main-reducer.js","components/checkbox-input/checkbox-input.jsx","utils/common.js","components/textarea-input/textarea-input.jsx","components/card/card.jsx","components/list/list.jsx","components/checklist/checklist.jsx","components/filters/filters.jsx","components/new-elements/new-elements.jsx","components/main/main.jsx","App.js","reportWebVitals.js","index.js"],"names":["HttpCode","Footer","className","href","Header","src","alt","width","height","xlinkHref","ListTypes","ActionType","loadCards","createAction","cards","payload","changeCompliteStatus","id","status","ApiRoute","createReducer","builder","addCase","state","action","NameSpace","combineReducers","CheckboxInput","descriptionText","maxSymbols","text","fullComment","isComplite","dispatch","useDispatch","useSelector","type","name","defaultChecked","onClick","length","substring","TextareaInput","defaultValue","trim","Card","useState","setFullComment","editCard","setEditCard","aria-label","List","title","Fragment","map","CheckList","useEffect","_getState","api","get","then","data","catch","compliteCards","filter","card","notComplitedCards","Filters","checked","NewElements","placeholder","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","axios","create","baseURL","timeout","interceptors","response","use","err","config","method","url","createAPI","store","configureStore","reducer","mainReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78a5187.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BACKEND_URL = `/api`;\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n  SUCCES: 200,\n};\n\nexport const createAPI = () => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    // withCredentials: true,\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    const {\n      response: {\n        status,\n        config: { method, url },\n      },\n    } = err;\n\n    if (status === HttpCode.NOT_FOUND) {\n      throw status;\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n};\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__copyright copyright container\">\r\n        <p className=\"copyright__text\">\r\n          ©{\" \"}\r\n          <a className=\"copyright__link\" href=\"mailto:a.vafin85@gmail.com\">\r\n            Vafin Artem\r\n          </a>{\" \"}\r\n          2020\r\n        </p>\r\n        <p className=\"copyright__text\">\r\n          Icon made by{\" \"}\r\n          <a className=\"copyright__link\" href=\"https://www.flaticon.com/authors/freepik\">\r\n            Freepik\r\n          </a>{\" \"}\r\n          from{\" \"}\r\n          <a className=\"copyright__link\" href=\"https://www.flaticon.com/\">\r\n            www.flaticon.com\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo logo\">\r\n        <a href=\"/\" className=\"logo__link\">\r\n          <img src=\"img/common/logo.svg\" alt=\"Maffin Check List\" width={166} height={34} className=\"logo__img\" />\r\n        </a>\r\n      </div>\r\n      <a href=\"/\" className=\"header__auth\">\r\n        <svg className=\"header__auth-icon\" width={20} height={20}>\r\n          <use xlinkHref=\"img/sprite.svg#icon-login\" />\r\n        </svg>\r\n      </a>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const ListTypes = {\n  IN_PROCESS: `В процессе`,\n  IS_READY: `Готово`,\n};\n\nexport const MAX_SYMBOLS = 110;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const ActionType = {\n  LOAD_CARDS: `cards/loadCards`,\n  COMPLITE_CARD: `cards/compliteCards`,\n};\n\nexport const loadCards = createAction(ActionType.LOAD_CARDS, (cards) => ({\n  payload: cards,\n}));\nexport const changeCompliteStatus = createAction(\n  ActionType.COMPLITE_CARD,\n  (id, status) => ({ payload: { id, status } })\n);\n","import { loadCards } from \"./actions\";\n\nconst ApiRoute = {\n  CARDS: `/cards`,\n};\n\nexport const fetchCards = () => (dispatch, _getState, api) =>\n  api\n    .get(ApiRoute.CARDS)\n    .then(({ data }) => dispatch(loadCards(data)))\n    .catch(() => {});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { ActionType } from \"../actions\";\n\nconst initialState = {\n  cards: [],\n};\n\nconst cards = createReducer(initialState, (builder) => {\n  builder.addCase(ActionType.LOAD_CARDS, (state, action) => {\n    state.cards = action.payload;\n  });\n});\n\nexport { cards };\n","import { combineReducers } from \"redux\";\nimport { cards } from \"./cards/cards\";\n\nexport const NameSpace = {\n  CARDS: `CARDS`,\n};\n\nexport default combineReducers({\n  [NameSpace.CARDS]: cards,\n});\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { NameSpace } from \"../../store/main-reducer\";\nimport { MAX_SYMBOLS } from \"../../consts\";\nimport { limitDescription } from \"../../utils/common\";\nimport { changeCompliteStatus } from \"../../store/actions\";\n\nconst CheckboxInput = ({ text, fullComment, id, isComplite }) => {\n  const dispatch = useDispatch();\n  const cards = useSelector((state) => state[NameSpace.CARDS].cards);\n\n  return (\n    <label className=\"checklist__box\">\n      <input\n        type=\"checkbox\"\n        name={`check-${id}`}\n        className=\"checklist__checkbox visually-hidden\"\n        defaultChecked={isComplite ? true : false}\n        onClick={() => dispatch(changeCompliteStatus(id, !isComplite))}\n      />\n      <span className=\"checklist__check-box\" />\n      <span className=\"checklist__name\">\n        {fullComment ? text : limitDescription(text, MAX_SYMBOLS)}\n      </span>\n    </label>\n  );\n};\n\nexport default CheckboxInput;\n","export const limitDescription = (descriptionText, maxSymbols) =>\n  descriptionText.length > maxSymbols\n    ? `${descriptionText.substring(0, maxSymbols - 1)}...`\n    : `${descriptionText}`;\n","const TextareaInput = ({ text }) => {\n  return (\n    <label className=\"checklist__box checklist__box--edit\">\n      <span className=\"visually-hidden\">Редактировать текст</span>\n      <textarea\n        name=\"card_text\"\n        className=\"checklist__edit\"\n        defaultValue={text.trim()}\n      />\n    </label>\n  );\n};\n\nexport default TextareaInput;\n","import { useState } from \"react\";\nimport { MAX_SYMBOLS } from \"../../consts\";\nimport CheckboxInput from \"../checkbox-input/checkbox-input\";\nimport TextareaInput from \"../textarea-input/textarea-input\";\n\nconst Card = ({ text, id, isComplite }) => {\n  const [fullComment, setFullComment] = useState(false);\n  const [editCard, setEditCard] = useState(false);\n  return (\n    <li\n      className={`checklist__item ${\n        isComplite ? `checklist__item--complite` : ``\n      }`}\n    >\n      <div\n        className={`checklist__inner ${\n          isComplite ? `checklist__inner--complite` : ``\n        } ${fullComment ? `checklist__inner--showed` : ``}`}\n      >\n        <div className=\"checklist__controls\">\n          <button\n            className=\"checklist__control checklist__control--edit\"\n            aria-label=\"Редактировать\"\n            onClick={() => {\n              setEditCard(!editCard);\n            }}\n          />\n          <button\n            className=\"checklist__control checklist__control--delete\"\n            aria-label=\"Удалить\"\n          />\n        </div>\n        {!editCard ? (\n          <CheckboxInput\n            id={id}\n            text={text}\n            isComplite={isComplite}\n            fullComment={fullComment}\n          />\n        ) : (\n          <TextareaInput text={text} />\n        )}\n        {text.length > MAX_SYMBOLS ? (\n          <button\n            className={`checklist__show-button ${\n              fullComment ? `checklist__show-button--showed` : ``\n            }`}\n            aria-label=\"Показать весь текст\"\n            onClick={() => {\n              setFullComment(!fullComment);\n            }}\n          />\n        ) : (\n          ``\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/card\";\n\nconst List = ({ title, cards }) => {\n  return (\n    <React.Fragment>\n      <h3 className=\"checklist__subtitle\">{title}</h3>\n      <ul className=\"checklist__list\">\n        {cards.map(({ id, text, isComplite }) => {\n          return <Card key={id} id={id} text={text} isComplite={isComplite} />;\n        })}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nexport default List;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ListTypes } from \"../../consts\";\nimport { fetchCards } from \"../../store/api-actions\";\nimport { NameSpace } from \"../../store/main-reducer\";\nimport List from \"../list/list\";\n\nconst CheckList = () => {\n  const dispatch = useDispatch();\n  const cards = useSelector((state) => state[NameSpace.CARDS].cards);\n\n  useEffect(() => {\n    if (!cards.length) {\n      dispatch(fetchCards());\n    }\n  }, [dispatch, cards]);\n\n  const compliteCards = cards.filter((card) => card.isComplite);\n  const notComplitedCards = cards.filter((card) => !card.isComplite);\n  return (\n    <section className=\"main__checklist checklist\">\n      <h2 className=\"checklist__title visually-hidden\">Проект: maffin.pw</h2>\n      <List title={ListTypes.IN_PROCESS} cards={notComplitedCards} />\n      <List title={ListTypes.IS_READY} cards={compliteCards} />\n    </section>\n  );\n};\n\nexport default CheckList;\n","const Filters = () => {\n  return (\n    <section className=\"top__filters filters\">\n      <h2 className=\"visually-hidden\">Фильтры</h2>\n      <form className=\"filters__form\">\n        <label className=\"filters__item\">\n          <span className=\"visually-hidden\">Проект</span>\n          <select name=\"project\" className=\"filters__input\">\n            <option checked>Выберите проект</option>\n            <option>maffin.pw</option>\n            <option>amrita-dent</option>\n          </select>\n        </label>\n        <label className=\"filters__item\">\n          <span className=\"visually-hidden\">Категория</span>\n          <select name=\"project\" className=\"filters__input\">\n            <option checked>Выберите категорию</option>\n          </select>\n        </label>\n        <label className=\"filters__item\">\n          <span className=\"visually-hidden\">Фильтр по выполнению</span>\n          <select name=\"project\" className=\"filters__input\">\n            <option checked>Показать все</option>\n            <option>Выполненные</option>\n            <option>Не выполненные</option>\n          </select>\n        </label>\n      </form>\n    </section>\n  );\n};\n\nexport default Filters;\n","const NewElements = () => {\n  return (\n    <section className=\"top__add-items add-items\">\n      <h2 className=\"visually-hidden\">Добавление элементов</h2>\n      <div className=\"add-items__item\">\n        <button className=\"add-items__button button\">\n          <svg className=\"button__icon\" width={15} height={12}>\n            <use xlinkHref=\"img/sprite.svg#icon-project\" />\n          </svg>\n          <span className=\"button__text\">Проект</span>\n        </button>\n        <form action=\"/\" className=\"add-items__input-box\">\n          <input type=\"text\" name=\"new_project\" placeholder=\"Новый проект\" />\n          <button type=\"submit\" className=\"add-items__confirm\">\n            Подтвердить\n          </button>\n        </form>\n      </div>\n      <div className=\"add-items__item\">\n        <button className=\"add-items__button button\">\n          <svg className=\"button__icon\" width={15} height={12}>\n            <use xlinkHref=\"img/sprite.svg#icon-project\" />\n          </svg>\n          <span className=\"button__text\">Категория</span>\n        </button>\n        <form\n          action=\"/\"\n          className=\"add-items__input-box add-items__input-box--showed\"\n        >\n          <input\n            type=\"text\"\n            className=\"add-items__input\"\n            name=\"new_cathegory\"\n            placeholder=\"Новая категория\"\n          />\n          <button\n            type=\"submit\"\n            className=\"add-items__confirm\"\n            aria-label=\"Подтвердить\"\n          />\n        </form>\n      </div>\n      <div className=\"add-items__item\">\n        <button className=\"add-items__button button\">\n          <svg className=\"button__icon\" width={13} height={14}>\n            <use xlinkHref=\"img/sprite.svg#icon-card\" />\n          </svg>\n          <span className=\"button__text\">Карточка</span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default NewElements;\n","import CheckList from \"../checklist/checklist\";\nimport Filters from \"../filters/filters\";\nimport NewElements from \"../new-elements/new-elements\";\n\nconst Main = () => {\n  return (\n    <main className=\"main\">\n      <h1 className=\"visually-hidden\">Чек-лист</h1>\n      <header className=\"main__top top\">\n        <Filters />\n        <NewElements />\n      </header>\n      <CheckList />\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Footer from \"./components/footer/footers\";\nimport Header from \"./components/header/header\";\nimport Main from \"./components/main/main\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <div className={`body__wrapper`}>\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createAPI } from \"./services/api\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport mainReducer from \"./store/main-reducer\";\n\nconst api = createAPI();\n// () => store.dispatch(authorization(AuthorizationStatus.NO_AUTH)),\n\nconst store = configureStore({\n  reducer: mainReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(),\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}